name: Package Build

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install linux dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential python3-dev libcairo2-dev libpango1.0-dev ffmpeg
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements_dev.txt
          python -m pip install .
      - name: Analysing the code with pylint
        run: |
          python -m pylint $(git ls-files '*.py')
      - name: Test with pytest
        run: |
          python -m pytest -v

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build
      - name: Build package
        run: |
          python -m build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-package
          path: |
            dist/*.whl
            dist/*.tar.gz
      - name: Get Build Version
        id: get_version
        run: |
          VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION"
